import React, { useContext, useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import { usecontext } from '../App';
import ProductCard from '../components/Productcard';
import Navigation from '../components/Navigationbar';
import './CatogeryPage.css';
import Catnav from '../components/Catnav';

const CategoryPage = () => {
Â  const { name } = useParams(); // can be "Main/Sub" or just "Main"
Â  const { products } = useContext(usecontext);
Â  const [filteredProducts, setFilteredProducts] = useState([]);
Â  const [isLoading, setIsLoading] = useState(true);
Â  const [showNotFound, setShowNotFound] = useState(false);

Â  useEffect(() => {
Â  Â  if (!products || products.length === 0) return;

Â  Â  let mainCategory = name;
Â  Â  let subCategory = null;

Â  Â  if (name.includes('/')) {
Â  Â  Â  const parts = name.split('/');
Â  Â  Â  mainCategory = decodeURIComponent(parts[0]);
Â  Â  Â  subCategory = decodeURIComponent(parts[1]);
Â  Â  } else {
Â  Â  Â  mainCategory = decodeURIComponent(name);
Â  Â  }

Â  Â  const matched = products.filter(p =>
Â  Â  Â  p.category === mainCategory &&
Â  Â  Â  (subCategory ? p.product_group === subCategory : true)
Â  Â  );

Â  Â  setFilteredProducts(matched);
Â  Â  setIsLoading(false);
Â  Â  setShowNotFound(matched.length === 0);
Â  }, [name, products]);

Â  const LoadingAnimation = () => (
Â  Â  <div className="loading-container">
Â  Â  Â  <div className="loading-spinner"></div>
Â  Â  Â  <p className="loading-text">Loading products for {name}...</p>
Â  Â  Â  <p className="loading-subtext">Please wait while we fetch the items</p>
Â  Â  </div>
Â  );

Â  const NotFoundMessage = () => (
Â  Â  <div className="not-found-container">
Â  Â  Â  <div className="not-found-icon">ðŸ˜•</div>
Â  Â  Â  <h3>No Products Found</h3>
Â  Â  Â  <p>We couldn't find any products in the {name} category.</p>
Â  Â  Â  <p className="subtext">Please check back later or try another category</p>
Â  Â  </div>
Â  );

Â  return (
Â  Â  <div className="category-page">
Â  Â  Â  <section className="navi">
Â  Â  Â  Â  <Navigation />
Â  Â  Â  </section>

Â  Â  Â  <Catnav />

Â  Â  Â  <div className="category-content">
Â  Â  Â  Â  <h2 className="category-title">{decodeURIComponent(name)}</h2>

Â  Â  Â  Â  {isLoading ? (
Â  Â  Â  Â  Â  <LoadingAnimation />
Â  Â  Â  Â  ) : showNotFound || filteredProducts.length === 0 ? (
Â  Â  Â  Â  Â  <NotFoundMessage />
Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  <ProductCard customProducts={filteredProducts} />
Â  Â  Â  Â  )}
Â  Â  Â  </div>
Â  Â  </div>
Â  );
};

export default CategoryPage;
